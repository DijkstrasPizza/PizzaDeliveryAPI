{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple API for a pizzeria",
    "version": "0.1.0",
    "title": "Pizza Delivery App API",
    "contact": {},
    "license": {
      "url": "http://unlicense.org"
    }
  },
  "host": "dijkstras-pizza.herokuapp.com",
  "basePath": "/",
  "tags": [
    {
      "name": "pizzas-api-controller",
      "description": "the pizzas API"
    },
    {
      "name": "orders-api-controller",
      "description": "the orders API"
    },
    {
      "name": "ingredients-api-controller",
      "description": "the ingredients API"
    },
    {
      "name": "menu-api-controller",
      "description": "the menu API"
    },
    {
      "name": "stores-api-controller",
      "description": "the stores API"
    }
  ],
  "paths": {
    "/ingredients": {
      "post": {
        "tags": [
          "ingredients-api-controller"
        ],
        "summary": "creates a new ingredient",
        "operationId": "newIngredient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A JSON encoded ingredient object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ingredient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Ingredient"
            }
          },
          "201": {
            "description": "ingredient created",
            "schema": {
              "$ref": "#/definitions/Ingredient"
            }
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/ingredients/{ingredientId}": {
      "get": {
        "tags": [
          "ingredients-api-controller"
        ],
        "summary": "returns a specific pizza ingredient",
        "operationId": "getIngredientById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ingredientId",
            "in": "path",
            "description": "an ingredient's unique ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "ingredient found",
            "schema": {
              "$ref": "#/definitions/Ingredient"
            }
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ingredients-api-controller"
        ],
        "summary": "updates a specific pizza ingredient",
        "operationId": "updateIngredientById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A JSON encoded ingredient object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ingredient"
            }
          },
          {
            "name": "ingredientId",
            "in": "path",
            "description": "an ingredient's unique ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "ingredient updated",
            "schema": {
              "$ref": "#/definitions/Ingredient"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ingredients-api-controller"
        ],
        "summary": "removes an ingredient from the database",
        "operationId": "deleteIngredientById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ingredientId",
            "in": "path",
            "description": "an ingredient's unique ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Item successfully deleted"
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/menu": {
      "get": {
        "tags": [
          "menu-api-controller"
        ],
        "summary": "returns a list of menus",
        "operationId": "getAllMenus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Menu"
              }
            }
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "menu-api-controller"
        ],
        "summary": "creates a new menu",
        "operationId": "newMenu",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A JSON encoded menu object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Menu"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Menu"
            }
          },
          "201": {
            "description": "menu added",
            "schema": {
              "$ref": "#/definitions/Menu"
            }
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/menu/{menuId}": {
      "get": {
        "tags": [
          "menu-api-controller"
        ],
        "summary": "returns the menu with the given ID",
        "operationId": "getMenuById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "description": "a menu's unique ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "menu found",
            "schema": {
              "$ref": "#/definitions/Menu"
            }
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "menu-api-controller"
        ],
        "summary": "updates the menu with the given ID",
        "operationId": "updateMenuById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A menu with updated information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Menu"
            }
          },
          {
            "name": "menuId",
            "in": "path",
            "description": "a menu's unique ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "menu updated",
            "schema": {
              "$ref": "#/definitions/Menu"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "menu-api-controller"
        ],
        "summary": "deletes a menu with the given ID",
        "operationId": "deleteMenuById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "description": "a menu's unique ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Item successfully deleted"
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/menu/{menuId}/ingredients": {
      "get": {
        "tags": [
          "menu-api-controller"
        ],
        "summary": "returns a list of pizza ingredients available on a menu",
        "description": "Returns a list of all pizza ingredients on a menu. Optional query parameter allows filtering by ingredient category. ",
        "operationId": "getIngredients",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "description": "a menu's unique ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "category",
            "in": "query",
            "description": "category",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ingredients found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ingredient"
              }
            }
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/menu/{menuId}/pizzas": {
      "get": {
        "tags": [
          "menu-api-controller"
        ],
        "summary": "returns a list of pizzas on a menu",
        "description": "Gets a list of every pizza on a given menu.",
        "operationId": "getAllPizzasByMenu",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "description": "a menu's unique ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pizza"
              }
            }
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/orders": {
      "post": {
        "tags": [
          "orders-api-controller"
        ],
        "summary": "adds a new order to the database",
        "description": "This operation adds an order to the database when a customer makes an order.",
        "operationId": "addOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "An order to add",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "201": {
            "description": "item created",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/orders/{orderId}": {
      "get": {
        "tags": [
          "orders-api-controller"
        ],
        "summary": "retrieves an order",
        "description": "By passing in a valid ID, you can find an order in the database.",
        "operationId": "getOrderById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "an order's unique ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "order found",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "orders-api-controller"
        ],
        "summary": "updates an order",
        "operationId": "updateOrderById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A JSON encoded Order object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "an order's unique ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "order updated",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/pizzas": {
      "post": {
        "tags": [
          "pizzas-api-controller"
        ],
        "summary": "creates a new pizza",
        "operationId": "newPizza",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A JSON encoded pizza object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pizza"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Pizza"
            }
          },
          "201": {
            "description": "pizza created",
            "schema": {
              "$ref": "#/definitions/Pizza"
            }
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pizzas/{pizzaId}": {
      "get": {
        "tags": [
          "pizzas-api-controller"
        ],
        "summary": "returns the pizza with the given ID",
        "description": "By passing in a valid ID, you can find a pizza in the database.",
        "operationId": "getPizzaById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pizzaId",
            "in": "path",
            "description": "a pizza's unique ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "pizza found",
            "schema": {
              "$ref": "#/definitions/Pizza"
            }
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "pizzas-api-controller"
        ],
        "summary": "updates an existing pizza",
        "description": "This operation updates information on a pizza with a given ID.",
        "operationId": "updatePizzaById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A pizza store with updated information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pizza"
            }
          },
          {
            "name": "pizzaId",
            "in": "path",
            "description": "a pizza's unique ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "item updated",
            "schema": {
              "$ref": "#/definitions/Pizza"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "pizzas-api-controller"
        ],
        "summary": "deletes an existing pizza",
        "description": "This operation deletes pizza with a given ID.",
        "operationId": "deletePizzaById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pizzaId",
            "in": "path",
            "description": "a pizza's unique ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Item successfully deleted"
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/stores": {
      "get": {
        "tags": [
          "stores-api-controller"
        ],
        "summary": "returns a list of stores",
        "description": "Gets a list of every store in the pizza company's network.",
        "operationId": "getStores",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PizzaStore"
              }
            }
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "stores-api-controller"
        ],
        "summary": "creates a new pizza store",
        "description": "Creates a new store in the system to represent a new physical store.",
        "operationId": "newStore",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A JSON encoded PizzaStore object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PizzaStore"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PizzaStore"
            }
          },
          "201": {
            "description": "store added",
            "schema": {
              "$ref": "#/definitions/PizzaStore"
            }
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/stores/{storeId}": {
      "get": {
        "tags": [
          "stores-api-controller"
        ],
        "summary": "returns a store object with a given ID",
        "description": "By passing in a valid ID, you can find a store in the database.",
        "operationId": "getStoreById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "a store's unique ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "store found",
            "schema": {
              "$ref": "#/definitions/PizzaStore"
            }
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "stores-api-controller"
        ],
        "summary": "updates an existing pizza store",
        "description": "This operation updates information on a pizza store with a given ID.",
        "operationId": "updateStoreById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "A pizza store with updated information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PizzaStore"
            }
          },
          {
            "name": "storeId",
            "in": "path",
            "description": "a store's unique ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "item updated",
            "schema": {
              "$ref": "#/definitions/PizzaStore"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "stores-api-controller"
        ],
        "summary": "deletes an existing pizza store",
        "description": "This operation deletes pizza store with a given ID.",
        "operationId": "deleteStoreById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "a store's unique ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Item successfully deleted"
          },
          "400": {
            "description": "Bad data in request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "type": "object",
      "required": [
        "city",
        "state",
        "streetAddr",
        "zip"
      ],
      "properties": {
        "city": {
          "type": "string",
          "example": "Seattle"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1
        },
        "state": {
          "type": "string",
          "example": "WA"
        },
        "streetAddr": {
          "type": "string",
          "example": "1234 56th St. SW"
        },
        "zip": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Ingredient": {
      "type": "object",
      "required": [
        "category",
        "isGlutenFree",
        "name"
      ],
      "properties": {
        "category": {
          "type": "string",
          "example": "Meat"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1
        },
        "isGlutenFree": {
          "type": "boolean",
          "example": false
        },
        "name": {
          "type": "string",
          "example": "Sausage"
        }
      }
    },
    "Menu": {
      "type": "object",
      "required": [
        "ingredients",
        "pizzas",
        "storesOffering"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1
        },
        "ingredients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ingredient"
          }
        },
        "pizzas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pizza"
          }
        },
        "storesOffering": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PizzaStore"
          }
        }
      }
    },
    "Order": {
      "type": "object",
      "required": [
        "custAddr",
        "order",
        "price",
        "storeAddr"
      ],
      "properties": {
        "custAddr": {
          "$ref": "#/definitions/Address"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1
        },
        "order": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pizza"
          }
        },
        "price": {
          "type": "number",
          "format": "double",
          "example": 19.99
        },
        "storeAddr": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "Pizza": {
      "type": "object",
      "required": [
        "ingredients",
        "menusOn",
        "price",
        "sizeDesc",
        "sizeInches"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1
        },
        "ingredients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ingredient"
          }
        },
        "menusOn": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Menu"
          }
        },
        "price": {
          "type": "number",
          "format": "double",
          "example": 19.99
        },
        "sizeDesc": {
          "type": "string",
          "example": "Small"
        },
        "sizeInches": {
          "type": "integer",
          "format": "int32",
          "example": 11
        }
      }
    },
    "PizzaStore": {
      "type": "object",
      "required": [
        "address",
        "menu"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 1
        },
        "menu": {
          "$ref": "#/definitions/Menu"
        }
      }
    }
  }
}